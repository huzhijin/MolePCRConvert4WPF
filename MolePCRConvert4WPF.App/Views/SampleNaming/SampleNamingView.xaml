<UserControl x:Class="MolePCRConvert4WPF.App.Views.SampleNaming.SampleNamingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MolePCRConvert4WPF.App.Views.SampleNaming"
             xmlns:vm="clr-namespace:MolePCRConvert4WPF.App.ViewModels"
             xmlns:models="clr-namespace:MolePCRConvert4WPF.Core.Models;assembly=MolePCRConvert4WPF.Core"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:SampleNamingViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="700" d:DesignWidth="900"
             Background="{DynamicResource MaterialDesignPaper}">
    <UserControl.Resources>
        <!-- TODO: Add WellTypeToBrushConverter if needed -->
        <!-- <localConverters:WellTypeToBrushConverter x:Key="WellTypeToBrushConverter" /> -->
        
        <!-- Style for ListViewItem to remove default selection visuals -->
        <Style x:Key="WellItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="IsTabStop" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!-- Let the Border inside DataTemplate handle selection visuals -->
                    <Setter Property="Background" Value="Transparent"/> 
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataTemplate for each well -->
        <DataTemplate x:Key="WellDataTemplate" DataType="{x:Type models:WellInfo}">
             <Border BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="1" 
                     Width="50" Height="50" 
                     Margin="1"
                     ToolTip="{Binding Position}"
                     Background="{DynamicResource MaterialDesignCardBackground}"> 
                 <!-- Conditional Background based on WellType could go here -->
                 <!-- Background="{Binding WellType, Converter={StaticResource WellTypeToBrushConverter}}" -->
                 
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
                        <Style.Triggers>
                             <!-- Visual cue for selection -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding Position}" FontSize="10" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding SampleName}" FontSize="9" HorizontalAlignment="Center"
                               TextWrapping="Wrap" Margin="2,1,2,1" TextAlignment="Center"
                               Visibility="{Binding SampleName, Converter={StaticResource NullOrEmptyToVisibilityConverter}, FallbackValue=Collapsed}"/>
                               <!-- Converter needed: NullOrEmptyToVisibilityConverter -->
                </StackPanel>
            </Border>
        </DataTemplate>
        
        <!-- Requires NullOrEmptyToVisibilityConverter -->
         <local:NullOrEmptyToVisibilityConverter x:Key="NullOrEmptyToVisibilityConverter" />

    </UserControl.Resources>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Main Content Area -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="400"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="350" MinWidth="300"/>
            </Grid.ColumnDefinitions>

            <!-- Plate View Area -->
            <materialDesign:Card Grid.Column="0" Padding="10" Margin="0,0,8,0" UniformCornerRadius="8">
                 <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/> <!-- Row for column headers -->
                        <RowDefinition Height="*"/>  <!-- Row for plate grid -->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/> <!-- Column for row headers -->
                        <ColumnDefinition Width="*"/>  <!-- Column for plate grid -->
                    </Grid.ColumnDefinitions>

                    <!-- Column Headers (1-12) -->
                    <ItemsControl Grid.Row="0" Grid.Column="1" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1" Columns="12"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemsSource>
                            <x:Array Type="sys:Int32" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <sys:Int32>1</sys:Int32>
                                <sys:Int32>2</sys:Int32>
                                <sys:Int32>3</sys:Int32>
                                <sys:Int32>4</sys:Int32>
                                <sys:Int32>5</sys:Int32>
                                <sys:Int32>6</sys:Int32>
                                <sys:Int32>7</sys:Int32>
                                <sys:Int32>8</sys:Int32>
                                <sys:Int32>9</sys:Int32>
                                <sys:Int32>10</sys:Int32>
                                <sys:Int32>11</sys:Int32>
                                <sys:Int32>12</sys:Int32>
                            </x:Array>
                        </ItemsControl.ItemsSource>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Row Headers (A-H) -->
                     <ItemsControl Grid.Row="1" Grid.Column="0">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="8"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemsSource>
                             <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <sys:String>A</sys:String>
                                <sys:String>B</sys:String>
                                <sys:String>C</sys:String>
                                <sys:String>D</sys:String>
                                <sys:String>E</sys:String>
                                <sys:String>F</sys:String>
                                <sys:String>G</sys:String>
                                <sys:String>H</sys:String>
                            </x:Array>
                        </ItemsControl.ItemsSource>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Well Grid -->
                    <ListView x:Name="WellsListView" Grid.Row="1" Grid.Column="1" 
                              ItemsSource="{Binding Wells}"
                              SelectionMode="Extended" 
                              Background="Transparent" 
                              BorderThickness="0"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                              ItemContainerStyle="{StaticResource WellItemContainerStyle}"
                              ItemTemplate="{StaticResource WellDataTemplate}"
                              HorizontalAlignment="Center" VerticalAlignment="Top">
                        <!-- Context Menu -->
                        <ListView.ContextMenu>
                             <ContextMenu>
                                <MenuItem Header="设置患者信息"
                                          Command="{Binding DataContext.SetPatientInfoCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=SelectedItems}"/>
                                <!-- Add other menu items if needed -->
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="12" Rows="8" IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <!-- Selection handling might need code-behind or attached behaviors for complex drag-select -->
                    </ListView>
                </Grid>
            </materialDesign:Card>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{DynamicResource MaterialDesignDivider}" Margin="4,0"/>

            <!-- Patient Info Area -->
            <materialDesign:Card Grid.Column="2" Padding="10" Margin="8,0,0,0" UniformCornerRadius="8">
                 <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="患者信息关联" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Margin="5,0,5,10"/>

                    <!-- Patient List -->
                     <DataGrid Grid.Row="1" 
                               ItemsSource="{Binding PatientMappings}" 
                               AutoGenerateColumns="False" 
                               IsReadOnly="True" 
                               CanUserAddRows="False"
                               CanUserDeleteRows="False"
                               HeadersVisibility="Column"
                               materialDesign:DataGridAssist.CellPadding="8 4 8 4"
                               materialDesign:DataGridAssist.ColumnHeaderPadding="8 4 8 4"
                               Margin="5,0,5,10">
                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Header="患者姓名" Binding="{Binding Patient.Name}" Width="*" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                            <materialDesign:DataGridTextColumn Header="病历号" Binding="{Binding Patient.MedicalRecordNumber}" Width="*" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                            <materialDesign:DataGridTextColumn Header="孔位" Binding="{Binding WellPositionsDisplay}" Width="*" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                            <DataGridTemplateColumn Header="操作" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                         <Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                                                 ToolTip="移除此关联"
                                                 Command="{Binding DataContext.RemovePatientMappingCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                 CommandParameter="{Binding}">
                                            <materialDesign:PackIcon Kind="Close" />
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    
                    <!-- Buttons -->
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                        <Button Content="设置选中孔位患者" 
                                Style="{StaticResource MaterialDesignRaisedButton}" 
                                Width="150" Margin="5"
                                Command="{Binding SetPatientInfoCommand}"
                                CommandParameter="{Binding ElementName=WellsListView, Path=SelectedItems}"/>
                                <!-- Passing selected items from ListView -->
                        <Button Content="清除所有关联" 
                                Style="{StaticResource MaterialDesignOutlinedButton}"
                                Width="130" Margin="5"
                                Command="{Binding ClearAllPatientsCommand}"/>
                    </StackPanel>
                </Grid>
            </materialDesign:Card>
        </Grid>

        <!-- Action Buttons Area -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,16,0,0">
            <!-- Add Back button if needed -->
            <!-- <Button Content="返回" Style="{StaticResource MaterialDesignOutlinedButton}" Width="100" Margin="0,0,8,0" Command="{Binding GoBackCommand}"/> -->
            <Button Content="应用并继续" 
                    Style="{StaticResource MaterialDesignRaisedButton}" 
                    Width="120" 
                    Command="{Binding ApplyCommand}"/>
        </StackPanel>
    </Grid>
</UserControl> 